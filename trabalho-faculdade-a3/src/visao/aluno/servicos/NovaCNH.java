package visao.aluno.servicos;

import controle.aluno.AlunoDAO;
import controle.detran.CarteiraDAO;
import controle.detran.ExamesDAO;
import controle.detran.ProvaTeoricaDAO;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.AlunoDTO;
import modelo.CarteiraDTO;
import modelo.UsuarioDTO;
import visao.aluno.MainAluno;

public class NovaCNH extends javax.swing.JFrame {

    boolean refazerExame = false;

    boolean exameMedAprovado = false;
    boolean examePsiAprovado = false;
    boolean examePratAprovado = false;
    boolean provaTeoriAprovado = false;
    AlunoDAO alunoDao = new AlunoDAO();

    int alunoLogadoId = AlunoDTO.usuarioLogado.getId_usuario();

    /**
     * Creates new form InterfaceNovaCNH
     */
    public NovaCNH() {
        initComponents();
        obterQuantidadeReprovacao();
        habilitarChance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txtUsuarioLogado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtResultadoMedico = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtResultadoPsicologico = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtResultadoPratico = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnSolicitarCarteira = new javax.swing.JButton();
        btnMedico = new javax.swing.JButton();
        btnPsicologo = new javax.swing.JButton();
        btnTeorico = new javax.swing.JButton();
        btnPratico = new javax.swing.JButton();
        btnImprimirCarteira = new javax.swing.JButton();
        txtMessagem = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton3.setText("Realizar exame");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Realizar exame");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(684, 574));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        txtUsuarioLogado.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtUsuarioLogado.setText("Olá, #nomeAluno");
        getContentPane().add(txtUsuarioLogado);
        txtUsuarioLogado.setBounds(40, 50, 210, 24);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Etapas");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(300, 150, 67, 20);

        jLabel3.setText("Exame Médico");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(130, 240, 77, 20);

        txtResultadoMedico.setText("Resultado:");
        getContentPane().add(txtResultadoMedico);
        txtResultadoMedico.setBounds(430, 250, 200, 20);

        jLabel5.setText("Exame Psicológico");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(130, 280, 100, 20);

        txtResultadoPsicologico.setText("Resultado:");
        getContentPane().add(txtResultadoPsicologico);
        txtResultadoPsicologico.setBounds(430, 280, 210, 20);

        jLabel7.setText("Exame Prático");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(130, 360, 77, 20);

        txtResultadoPratico.setText("Resultado:");
        getContentPane().add(txtResultadoPratico);
        txtResultadoPratico.setBounds(430, 360, 190, 20);

        jLabel9.setText("Exame Teórico");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(130, 320, 79, 20);

        jLabel10.setText("Resultado:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(430, 320, 200, 20);

        btnSolicitarCarteira.setBackground(new java.awt.Color(0, 0, 0));
        btnSolicitarCarteira.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSolicitarCarteira.setForeground(new java.awt.Color(255, 255, 255));
        btnSolicitarCarteira.setText("Solicitar Carteira");
        btnSolicitarCarteira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitarCarteiraActionPerformed(evt);
            }
        });
        getContentPane().add(btnSolicitarCarteira);
        btnSolicitarCarteira.setBounds(140, 460, 160, 40);

        btnMedico.setBackground(new java.awt.Color(51, 102, 255));
        btnMedico.setForeground(new java.awt.Color(255, 255, 255));
        btnMedico.setText("Marcar Exame");
        btnMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicoActionPerformed(evt);
            }
        });
        getContentPane().add(btnMedico);
        btnMedico.setBounds(260, 240, 130, 30);

        btnPsicologo.setBackground(new java.awt.Color(51, 102, 255));
        btnPsicologo.setForeground(new java.awt.Color(255, 255, 255));
        btnPsicologo.setText("Marcar Exame");
        btnPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPsicologoActionPerformed(evt);
            }
        });
        getContentPane().add(btnPsicologo);
        btnPsicologo.setBounds(260, 280, 130, 30);

        btnTeorico.setBackground(new java.awt.Color(51, 102, 255));
        btnTeorico.setForeground(new java.awt.Color(255, 255, 255));
        btnTeorico.setText("Iniciar prova");
        btnTeorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeoricoActionPerformed(evt);
            }
        });
        getContentPane().add(btnTeorico);
        btnTeorico.setBounds(260, 320, 130, 30);

        btnPratico.setBackground(new java.awt.Color(51, 102, 255));
        btnPratico.setForeground(new java.awt.Color(255, 255, 255));
        btnPratico.setText("Marcar Exame");
        btnPratico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPraticoActionPerformed(evt);
            }
        });
        getContentPane().add(btnPratico);
        btnPratico.setBounds(260, 360, 130, 30);

        btnImprimirCarteira.setBackground(new java.awt.Color(153, 153, 153));
        btnImprimirCarteira.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnImprimirCarteira.setForeground(new java.awt.Color(51, 51, 51));
        btnImprimirCarteira.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/imprimindo-contorno-do-botao.png"))); // NOI18N
        btnImprimirCarteira.setText("Imprimir Carteira");
        btnImprimirCarteira.setEnabled(false);
        btnImprimirCarteira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirCarteiraActionPerformed(evt);
            }
        });
        getContentPane().add(btnImprimirCarteira);
        btnImprimirCarteira.setBounds(340, 460, 170, 40);

        txtMessagem.setForeground(new java.awt.Color(153, 0, 0));
        getContentPane().add(txtMessagem);
        txtMessagem.setBounds(80, 100, 490, 30);

        btnVoltar.setBackground(new java.awt.Color(255, 51, 51));
        btnVoltar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("X");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar);
        btnVoltar.setBounds(620, 20, 40, 30);

        jLabel1.setText("________________________________________________________");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(140, 170, 400, 20);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicoActionPerformed
        if (refazerExame) {
            alunoDao.refazerExame(1);
        } else {
            alunoDao.fazerExame(1);
        }

    }//GEN-LAST:event_btnMedicoActionPerformed

    private void btnPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPsicologoActionPerformed
        if (refazerExame) {
            alunoDao.refazerExame(2);
        } else {
            alunoDao.fazerExame(2);
        }
    }//GEN-LAST:event_btnPsicologoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnTeoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeoricoActionPerformed
        this.dispose();
        new ProvaTeorica().setVisible(true);
    }//GEN-LAST:event_btnTeoricoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnPraticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPraticoActionPerformed
        if (refazerExame) {
            alunoDao.refazerExame(4);
        } else {
            alunoDao.fazerExame(4);
        }
    }//GEN-LAST:event_btnPraticoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtUsuarioLogado.setText("Olá, " + UsuarioDTO.usuarioLogado.getNome_usuario());
    }//GEN-LAST:event_formWindowOpened

    private void btnSolicitarCarteiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitarCarteiraActionPerformed
        cadastrarCarteira();
    }//GEN-LAST:event_btnSolicitarCarteiraActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        verificaSeEstaFazendoExame();
        pegarResultadosExames();
        ativarBotaoSolicitarCarteira();
        verificaSeJaFezProva();
        verficaSeJatemCarteira();
        pegarResultadoProvaTeorica();
        verificaAprovados();
    }//GEN-LAST:event_formWindowActivated

    private void btnImprimirCarteiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirCarteiraActionPerformed
        this.dispose();
        new Carteira().setVisible(true);
    }//GEN-LAST:event_btnImprimirCarteiraActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
        new MainAluno().setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void verificaSeJaFezProva() {
        try {
            // validar se já existe prova com id de usuario
            ProvaTeoricaDAO provaDao = new ProvaTeoricaDAO();
            ResultSet rsPDao = provaDao.buscarProvasAprovadas(alunoLogadoId);

            if (rsPDao.next()) {
                btnTeorico.setEnabled(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(NovaCNH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void verificaSeEstaFazendoExame() {
        try {
            ResultSet rsExDao = new ExamesDAO().buscarExamesSemResultado();

            while (rsExDao.next()) {
                int tipo_exame = rsExDao.getInt("tipo_exame_id");

                if (tipo_exame == 1) {
                    btnMedico.setText("Exame sendo feito");
                    btnMedico.setEnabled(false);
                }
                if (tipo_exame == 2) {
                    btnPsicologo.setText("Exame sendo feito");
                    btnPsicologo.setEnabled(false);
                }
                if (tipo_exame == 4) {
                    btnPratico.setText("Exame sendo feito");
                    btnPratico.setEnabled(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(NovaCNH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void pegarResultadosExames() {
        ResultSet rsAlunoDao = alunoDao.consultarExame();

        try {
            while (rsAlunoDao.next()) {
                if (rsAlunoDao.getInt("tipo_exame_id") == 1) {
                    txtResultadoMedico.setText("Resultado: " + rsAlunoDao.getString("resultado"));
                }
                if (rsAlunoDao.getInt("tipo_exame_id") == 2) {
                    txtResultadoPsicologico.setText("Resultado: " + rsAlunoDao.getString("resultado"));
                }
                if (rsAlunoDao.getInt("tipo_exame_id") == 4) {
                    txtResultadoPratico.setText("Resultado: " + rsAlunoDao.getString("resultado"));
                }

            }

            rsAlunoDao.close();
        } catch (SQLException ex) {
            Logger.getLogger(NovaCNH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String pegarResultadoProvaTeorica() {

        ProvaTeoricaDAO pDao = new ProvaTeoricaDAO();

        ResultSet rsPDAO = pDao.buscarProva(alunoLogadoId);
        ResultSet rsPDaoAprovado = pDao.buscarProvasAprovadas(alunoLogadoId);

        try {
            if (rsPDaoAprovado.next()) {
                String resultadoProva = rsPDaoAprovado.getString("resultado");
                int notaProva = rsPDaoAprovado.getInt("nota");

                jLabel10.setText("Resultado: " + resultadoProva + " - " + (notaProva * 5) + "%");
                jLabel10.setForeground(new Color(0, 102, 0, 255));

                return resultadoProva;
            } else {
                if (rsPDAO.next()) {
                    String resultadoProva = rsPDAO.getString("resultado");
                    int notaProva = rsPDAO.getInt("nota");

                    jLabel10.setText("Resultado: " + resultadoProva + " - " + (notaProva * 5) + "%");
                    jLabel10.setForeground(new Color(0, 102, 0, 255));

                    if (resultadoProva.equals("Reprovado")) {
                        jLabel10.setForeground(Color.RED);
                    }

                    return resultadoProva;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(NovaCNH.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }

        return "";
    }

    // Cadastrar carteira 
    private void cadastrarCarteira() {
        Date dataAtual = new Date();

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(dataAtual);

        calendar.add(Calendar.YEAR, 4);

        Date dataVencimento = calendar.getTime();

        if (verificaAprovados()) {
            CarteiraDTO carteiraDto = new CarteiraDTO();

            carteiraDto.setAluno_nome(AlunoDTO.usuarioLogado.getNome_usuario());
            carteiraDto.setDt_emissao(dataAtual);
            carteiraDto.setDt_vencimento(dataVencimento);
            carteiraDto.setAluno_id(alunoLogadoId);
            carteiraDto.setAluno_cpf(AlunoDTO.usuarioLogado.getCpf_usuario());

            JOptionPane.showMessageDialog(null, "Solicitação feita!");

            new CarteiraDAO().cadastrarCarteira(carteiraDto);

        }
    }

    private boolean verificaAprovados() {

        ResultSet rsProvaDao = new ProvaTeoricaDAO().buscarProva(alunoLogadoId);
        ResultSet rsExDao = new ExamesDAO().buscarExamesAprovados();

        try {
            while (rsExDao.next()) {
                int tipoExameId = rsExDao.getInt("tipo_exame_id");

                if (tipoExameId == 1) {
                    btnMedico.setEnabled(false);
                    exameMedAprovado = true;
                }

                if (tipoExameId == 2) {
                    btnPsicologo.setEnabled(false);
                    examePsiAprovado = true;
                }

                if (tipoExameId == 4) {
                    btnPratico.setEnabled(false);
                    examePratAprovado = true;
                }
            }

            while (rsProvaDao.next()) {
                String resultado = rsProvaDao.getString("resultado");

                if ("Aprovado".equals(resultado)) {
                    provaTeoriAprovado = true;
                }
            }

            return exameMedAprovado && examePratAprovado && examePsiAprovado && provaTeoriAprovado;

        } catch (SQLException e) {
            Logger.getLogger(NovaCNH.class.getName()).log(Level.SEVERE, null, e);
            return false;
        }
    }

    private void ativarBotaoSolicitarCarteira() {
        if (verificaAprovados()) {
            btnSolicitarCarteira.setEnabled(true);
        } else {
            btnSolicitarCarteira.setEnabled(false);
        }
    }

    private void verficaSeJatemCarteira() {
        try {
            ResultSet rsCarteira = new CarteiraDAO().buscaCarteira();

            if (rsCarteira.next()) {
                btnSolicitarCarteira.setEnabled(false);
                btnImprimirCarteira.setEnabled(true);
            }

        } catch (SQLException e) {
        }
    }

    private void habilitarChance() {
        int contadorReprovacao = obterQuantidadeReprovacao();

        try {
            if (contadorReprovacao > 1) {
                txtMessagem.setText("Reprovado. Tente novamente em 6 meses.");

                btnMedico.setEnabled(false);
                btnPratico.setEnabled(false);
                btnPsicologo.setEnabled(false);
                btnTeorico.setEnabled(false);

                return;
            }

            if (contadorReprovacao == 1) {
                ExamesDAO exDao = new ExamesDAO();
                ResultSet rsExames = exDao.buscarExamesReprovados(alunoLogadoId);
                ResultSet rsProvas = new ProvaTeoricaDAO().buscarProvasReprovadas(alunoLogadoId);

                if (rsProvas.next()) {
                    btnTeorico.setText("Refazer exame");
                    btnTeorico.setEnabled(true);
                }

                if (rsExames.next()) {
                    switch (rsExames.getInt("tipo_exame_id")) {
                        case 1 -> {
                            btnMedico.setText("Refazer exame");
                            btnMedico.setEnabled(true);
                        }
                        case 2 -> {
                            btnPsicologo.setText("Refazer exame");
                            btnPsicologo.setEnabled(true);
                        }
                        case 4 -> {
                            btnPratico.setText("Refazer exame");
                            btnPratico.setEnabled(true);
                        }
                        default -> {
                        }
                    }
                }
            }
        } catch (SQLException e) {
        }

    }

    private int obterQuantidadeReprovacao() {
        int contadorReprovacao = 0;

        try {
            ResultSet rsExames = new ExamesDAO().buscarExamesReprovados(alunoLogadoId);
            ResultSet rsProvas = new ProvaTeoricaDAO().buscarProvasReprovadas(alunoLogadoId);

            while (rsExames.next()) {
                contadorReprovacao++;
            }
            while (rsProvas.next()) {
                contadorReprovacao++;
            }

        } catch (SQLException e) {
        }
        return contadorReprovacao;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovaCNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovaCNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovaCNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovaCNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovaCNH().setVisible(true);              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimirCarteira;
    private javax.swing.JButton btnMedico;
    private javax.swing.JButton btnPratico;
    private javax.swing.JButton btnPsicologo;
    private javax.swing.JButton btnSolicitarCarteira;
    private javax.swing.JButton btnTeorico;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel txtMessagem;
    private javax.swing.JLabel txtResultadoMedico;
    private javax.swing.JLabel txtResultadoPratico;
    private javax.swing.JLabel txtResultadoPsicologico;
    private javax.swing.JLabel txtUsuarioLogado;
    // End of variables declaration//GEN-END:variables
}
